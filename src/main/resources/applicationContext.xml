<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans"    
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:aop="http://www.springframework.org/schema/aop"   
    xmlns:context="http://www.springframework.org/schema/context"
	xmlns:task="http://www.springframework.org/schema/task"
    xmlns:tx="http://www.springframework.org/schema/tx"  
    xsi:schemaLocation="
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd  
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd  
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/task
		http://www.springframework.org/schema/task/spring-task-3.1.xsd ">
        
    <!--  导入springMvc.xml配置文件 -->
    <import resource="classpath:spring-mvc.xml" />
	<!-- 加载数据库配置 -->
     <context:property-placeholder location="classpath:jdbc.properties" />

	<context:annotation-config />
	<!--spring扫描注解的配置  -->
	<context:component-scan base-package="com.myzonespringboot.util" />

	<!--开启这个配置，spring才能识别@Scheduled注解   -->
	<task:annotation-driven scheduler="qbScheduler" mode="proxy"/>
	<task:scheduler id="qbScheduler" pool-size="10"/>


	<!-- 加载数据源 -->
	<!--<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		&lt;!&ndash;<property name="url" value="jdbc:mysql://106.14.166.40:3306/myZone?useUnicode=true&amp;characterEncoding=UTF-8&amp;createDatabaseIfNotExist=true" />&ndash;&gt;
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="maxActive" value="${jdbc.maxActive}" />
		<property name="maxIdle" value="${jdbc.maxIdle}" />
		<property name="minIdle" value="${jdbc.minIdle}" />
		<property name="maxWait" value="${jdbc.maxWait}" />
	</bean>-->

	<!-- Hikari Datasource连接池 -->
	<bean id="dataSourceHikari" class="com.zaxxer.hikari.HikariDataSource"  destroy-method="shutdown">
		 <property name="driverClassName" value="${jdbc.driverClassName}" />  <!-- 无需指定，除非系统无法自动识别 -->
		<property name="jdbcUrl" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<!-- 连接只读数据库时配置为true， 保证安全 -->
		<property name="readOnly" value="false" />
		<!-- 等待连接池分配连接的最大时长（毫秒），超过这个时长还没可用的连接则发生SQLException， 缺省:30秒 -->
		<property name="connectionTimeout" value="30000" />
		<!-- 一个连接idle状态的最大时长（毫秒），超时则被释放（retired），缺省:10分钟 -->
		<property name="idleTimeout" value="600000" />
		<!-- 一个连接的生命时长（毫秒），超时而且没被使用则被释放（retired），缺省:30分钟，建议设置比数据库超时时长少30秒，参考MySQL wait_timeout参数（show variables like '%timeout%';） -->
		<property name="maxLifetime" value="1800000" />
		<!-- 连接池中允许的最大连接数。缺省值：10；推荐的公式：((core_count * 2) + effective_spindle_count) -->
		<property name="maximumPoolSize" value="15" />
	</bean>
	
	<!-- 配置SessionFactory,表示Hibernate初始化配置 -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSourceHikari" />
		<property name="hibernateProperties">  
            <props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
				<prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
				<!-- <prop key="hibernate.current_session_context_class">thread</prop> -->
				</props> 
        </property>
        <!-- 配置映射文件 -->
        <!-- 自动扫描注解方式配置的hibernate类文件 -->
		<property name="packagesToScan">
			<list>
				<value>com.myzonespringboot.model</value>
			</list>
		</property>
	</bean>
	
	 <!--声明式事务-->
    <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory" />  
    </bean>
	  
    <aop:config>
        <aop:pointcut id="productServiceMethods" expression="execution(* com.myzonespringboot.dao.*.*(..))" />
        <aop:advisor advice-ref="txAdvice" pointcut-ref="productServiceMethods" />  
    </aop:config>
     
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>  
        	<!--<tx:method name="save*"   propagation="REQUIRED" read-only="false" />
			<tx:method name="add*"    propagation="REQUIRED" />
			<tx:method name="create*" propagation="REQUIRED" />
			<tx:method name="insert*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="merge*"  propagation="REQUIRED" />
			<tx:method name="del*"    propagation="REQUIRED" />
			<tx:method name="remove*" propagation="REQUIRED" />
			<tx:method name="put*"    propagation="REQUIRED" />
            <tx:method name="*" propagation="SUPPORTS" read-only="true" />-->
			<tx:method name="*" propagation="REQUIRED" />
        </tx:attributes>  
    </tx:advice>
	
	
</beans>